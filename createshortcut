#!/bin/bash

usage() {
  cat <<EOF

NAME

  $(basename $0) - copy .desktop file from Desktop to local .desktop directory

SYNOPSIS

  $(basename $0) <name>

  This script will copy a lone chrome-*.desktop file from ~/Desktop to the user's
  .desktop file directory ($LOCAL_DESKTOP_DIR).  It will name the final file with the name you provide.

  This script is used for shortcuts that ONLY are specific to this machine and
  thus are copied to $LOCAL_DESKTOP_DIR.

DESCRIPTION

  name - name to precede .desktop in destination shortcut filename (ie - <name>.desktop)

EOF

}

NAME=$1
if [ -z $NAME ]; then
  echo -e "ERROR: you must provde <NAME>\n"
  usage
  exit 1
fi

LOCAL_DESKTOP_DIR=~/.local/share/applications
DEST_SHORTCUT=$LOCAL_DESKTOP_DIR/$NAME.desktop

num_desktop_files="$(find ~/Desktop -type f -name 'chrome-*.desktop' | wc -l)"

if [ "$num_desktop_files" != "1" ]; then
  printf "There are too many/few shortcuts in ~/Desktop (found: $num_desktop_files)\n\n"

  for i in $(find ~/Desktop -type f -name 'chrome-*.desktop'); do
    printf "[$i]\n"
    grep --color 'Name' $i
    printf "\n"
  done
  exit 1
fi

src_desktop_file="$(find ~/Desktop -type f -name 'chrome-*.desktop')"

# Chrome for whatever reason will (always ??) put a *.desktop file both in ~/Desktop AND ~/.local/share/applications
duplicate_desktop_file=$LOCAL_DESKTOP_DIR/$(basename $src_desktop_file)
if [ -f $duplicate_desktop_file ]; then
  rm $duplicate_desktop_file
  printf "Removed duplicate .desktop file put by Chrome at: [$duplicate_desktop_file]\n"
fi

# ls -l $LOCAL_DESKTOP_DIR/*.desktop

mv $src_desktop_file $DEST_SHORTCUT
chmod +x $DEST_SHORTCUT
printf "\n"
printf "Moved [$src_desktop_file] to [$DEST_SHORTCUT]"
