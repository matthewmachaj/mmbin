#!/bin/bash

USER_CRON_DIR=$HOME/.cron
USER_CRONTAB_FILE=crontab

USER_CRONTAB=$USER_CRON_DIR/$USER_CRONTAB_FILE

LINUX_USER_CRONTAB=/var/spool/cron/crontabs/$USER

if [ ! -f $USER_CRONTAB ]; then
  echo "User crontab does not exist at: [$USER_CRONTAB]"
  echo "Creating from: [$LINUX_USER_CRONTAB]"

  mkdir -p $USER_CRON_DIR
  sudo cp $LINUX_USER_CRONTAB $USER_CRONTAB
fi

sudo chown $USER:crontab $USER_CRONTAB

if [ ! -d $USER_CRON_DIR/.git ]; then
  echo "User crontab is not in a git repo"
  (cd $USER_CRON_DIR; git init)
fi

sudo $EDITOR $USER_CRONTAB

(
  cd $USER_CRON_DIR
  git add $USER_CRONTAB_FILE
  git commit -m "Updated User crontab"
)

sudo cp $USER_CRONTAB $LINUX_USER_CRONTAB

# TODO: figure out a way to INSTALL the modified crontab without having
# to use `crontab -e`; though, I do kind of like to be able to verify
# that the changes were actually moved to the Linux user cron file
crontab -e
